{"version":3,"sources":["Card/index.js","App.js","reportWebVitals.js","index.js"],"names":["Card","tokenInstance","ticketClass","ticketId","devconId","className","Typography","variant","component","toString","color","src","App","useState","tokens","setTokens","email","setEmail","disabledState","setDisabledState","negotiator","Negotiator","tokenOrigin","useEffect","a","negotiate","then","catch","e","href","onSubmit","event","preventDefault","target","value","id","axios","get","result","alert","err","openTicketInIframe","style","fontSize","marginRight","type","onChange","disabled","length","map","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAyBeA,MArBf,YAAkC,IAAlBC,EAAiB,EAAjBA,cACNC,EAAoCD,EAApCC,YAAaC,EAAuBF,EAAvBE,SAAUC,EAAaH,EAAbG,SAC/B,GAAIF,GAAgBC,GAAaC,EACjC,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,cAACC,EAAA,EAAD,CAAYD,UAAU,cAAcE,QAAQ,KAAKC,UAAU,KAA3D,SACGN,EAAYO,aAEf,cAACH,EAAA,EAAD,CAAYD,UAAU,WAAWE,QAAQ,QAAQG,MAAM,gBAAgBF,UAAU,IAAjF,SACGL,GAAYA,EAASM,aAExB,eAACH,EAAA,EAAD,CAAYD,UAAU,WAAWE,QAAQ,QAAQG,MAAM,gBAAgBF,UAAU,IAAjF,wBACcJ,GAAYA,EAASK,iBAGrC,qBAAKJ,UAAU,YAAYM,IAAI,iC,uBC2EtBC,MAnFf,WAGE,MAA0BC,mBAAS,IAAnC,mBAAKC,EAAL,KAAaC,EAAb,KACA,EAAwBF,mBAAS,IAAjC,mBAAKG,EAAL,KAAYC,EAAZ,KACA,EAAwCJ,oBAAS,GAAjD,mBAAKK,EAAL,KAAoBC,EAApB,KAKMC,EAAa,IAAIC,WAFR,GAE2B,gBAAiB,CAAEC,YAD7C,gDA+BhB,OA5BAC,oBAAS,sBAAC,sBAAAC,EAAA,sDACRJ,EAAWK,YAAYC,MAAK,SAAAZ,GAC1BC,EAAUD,EAAOA,WAChBa,OAAM,SAAAC,OAHD,2CAIP,IAyBD,iCACE,mBAAGC,KAAK,IAAR,SAAY,qBAAKxB,UAAU,OAAOM,IAAI,mBACtC,qBAAKN,UAAU,aAAf,SACE,+DAEF,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,gBAAgBM,IAAI,0BAErC,qBAAKN,UAAU,aAAf,SACE,2KAEF,qBAAKA,UAAU,aAAf,SACE,mFAEF,qBAAKA,UAAU,aAAf,SACA,uBAAMyB,SAvBW,SAACC,GACpBA,EAAMC,iBACN,IAAMhB,EAAQe,EAAME,OAAO,GAAGC,MAC9Bf,GAAiB,GAlBQ,SAAC,GAAU,IAATgB,EAAQ,EAARA,GAC3BC,IAAMC,IAAN,8DAAiEF,IAAMT,MACrE,SAACY,GACCC,MAAM,8BAERZ,OAAM,SAAAa,GACND,MAAM,oDACNpB,GAAiB,MAYnBsB,CAAmB,CAAEN,GAAInB,KAmBvB,UACE,kCAAO,sBAAM0B,MAAO,CAAEC,SAAU,OAAQC,YAAa,OAA9C,oBACP,uBAAOF,MAAO,CAAEE,YAAa,OAASC,KAAK,QAAQX,MAAOlB,EAAO8B,SA7BlD,SAACf,GACpBd,EAASc,EAAME,OAAOC,aA8BlB,uBAAOW,KAAK,SAASX,MAAM,SAASa,SAAU7B,SAG9CJ,EAAOkC,OAAS,GAChB,gCACE,qBAAK3C,UAAU,aAAf,SACE,gDAEF,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,gBAAf,SAEIS,GAAUA,EAAOkC,OAAS,GAAKlC,EAAOmC,KAAI,SAAChD,EAAeiD,GACxD,OAAO,cAAC,EAAD,CAAkBjD,cAAeA,GAAtBiD,iBCxErBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b43f54c3.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport './Card.css';\n\nfunction Card({ tokenInstance }) {\n  const { ticketClass, ticketId, devconId } = tokenInstance;\n  if(!ticketClass || !ticketId || !devconId) return;\n  return (\n    <div className=\"ticketContainer\">\n      <div className=\"ticketDetails\">\n        <Typography className=\"ticketClass\" variant=\"h5\" component=\"h2\">\n          {ticketClass.toString()}\n        </Typography>\n        <Typography className=\"ticketId\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {ticketId && ticketId.toString()}\n        </Typography>\n        <Typography className=\"devconId\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Devcon ID: {devconId && devconId.toString()}\n        </Typography>\n      </div>\n      <img className=\"ticketImg\" src=\"ticket_example_image.svg\"></img>\n    </div>\n  );\n}\n\nexport default Card;\n","import React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport axios from 'axios';\nimport './App.css';\n\n// An example of how tokens/tickets can be generated via a form\n// these sent to the input entered email address which will present a magic link.\n// After clicking on a magic link, when you return to this web page the token will be presented\n// inside the view.\n\n// note uses version 1 of the Token Negotiator. \n\nfunction App() {\n\n  // local react state for tokens\n  let [tokens, setTokens] = useState([]);\n  let [email, setEmail] = useState('');\n  let [disabledState, setDisabledState] = useState(false);\n  \n  // create configuration and instance of Negotiator.\n  const filter = {};\n  let tokensURL = 'https://devcontickets.herokuapp.com/outlet/';\n  const negotiator = new Negotiator(filter, \"devcon-ticket\", { tokenOrigin: tokensURL });\n  \n  useEffect(async () => {\n    negotiator.negotiate().then(tokens => { \n      setTokens(tokens.tokens); \n    }).catch(e => {});\n  }, []);\n\n  const openTicketInIframe = ({id}) => {          \n    axios.get(`https://crypto-verify.herokuapp.com/issue-ticket?id=${id}`).then(\n      (result) => {\n        alert('Please check your email');\n      }\n    ).catch(err => { \n      alert('Email could not be sent, please try again later.');\n      setDisabledState(false);\n    });\n  }\n\n  const handleChange = (event) => {\n    setEmail(event.target.value);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();    \n    const email = event.target[0].value;\n    setDisabledState(true);\n    openTicketInIframe({ id: email });\n  }\n\n  return (\n    <main>\n      <a href=\"/\"><img className=\"logo\" src=\"./devcon.svg\"></img></a>\n      <div className=\"flexCenter\">\n        <p>[DEMO Ticket Issuer Website]</p>\n      </div>\n      <div className=\"flexCenter\">\n        <img className=\"devcon_bogota\" src=\"./devcon_bogota.svg\"></img>\n      </div>\n      <div className=\"flexCenter\">\n        <p>A Devcon ticket provides access to the event and special offers between the dates X-XX for hotel bookings, travel, restaurants and more.</p>\n      </div>\n      <div className=\"flexCenter\">\n        <p>Claim your ticket (demonstration purposes only):</p>\n      </div>\n      <div className=\"flexCenter\">\n      <form onSubmit={handleSubmit}>\n        <label><span style={{ fontSize: '14px', marginRight: '7px' }}>Email:</span>\n        <input style={{ marginRight: '7px' }} type=\"email\" value={email} onChange={handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" disabled={disabledState} />\n      </form>\n      </div>\n      { tokens.length > 0 &&\n        <div>\n          <div className=\"flexCenter\">\n            <p>Your tickets:</p>\n          </div>\n          <div className=\"flexCenter\">\n            <div className=\"tokensWrapper\">\n              {\n                tokens && tokens.length > 0 && tokens.map((tokenInstance, index) => {\n                  return <Card key={index} tokenInstance={tokenInstance} />\n                })\n              }\n            </div> \n          </div> \n        </div>\n      }\n    </main>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}