{"version":3,"sources":["LogoCard/index.js","TokenCard/index.js","BookingModal/index.js","RoomCard/index.js","TokenNotificationCard/index.js","DatePicker/index.js","BookingDate/index.js","App.js","reportWebVitals.js","index.js"],"names":["LogoCard","title","Card","className","CardContent","Typography","gutterBottom","variant","component","TokenCard","tokenInstance","applyDiscount","discount","selectedPendingTokenInstance","isSelectedToken","ticketId","ticketClass","devconId","tokenClassNames","tokenDetailsClassNames","onClick","e","toString","color","src","BookingModal","roomType","price","tokens","book","React","useState","open","setOpen","useReducer","state","newState","reference","cardNo","cardSort","cardCsv","formInput","setFormInput","handleInput","evt","name","target","newValue","value","handleSubmit","preventDefault","handleClose","viewPrice","Button","size","Dialog","onClose","DialogTitle","disableTypography","DialogContent","onSubmit","style","border","padding","fontSize","display","justifyContent","textAlign","borderLeft","borderRight","borderBottom","length","map","token","index","TextField","id","label","placeholder","helperText","fullWidth","margin","onChange","InputLabelProps","shrink","alignItems","marginTop","marginRight","width","height","DialogActions","disabled","useStyles","makeStyles","root","maxWidth","media","RoomCard","room","classes","type","image","frequency","CardMedia","CardActions","TokenView","tokensNumber","TokenNotificationCard","Zoom","in","transitionDelay","DatePicker","date","utils","DateFnsUtils","Grid","container","disableToolbar","format","KeyboardButtonProps","BookingDate","today","Date","tomorrow","setDate","getDate","from","to","mockRoomData","tokenIssuers","window","negotiator","Client","issuers","options","App","setTokens","issuer","proof","tokenProofData","setTokenProofData","freeShuttle","setFreeShuttle","roomTypesData","setRoomTypesData","undefined","setDiscount","setSelectedPendingTokenInstance","on","issuerTokens","push","tokenProof","setTimeout","getApplicableDiscount","ticket","a","authenticate","unsignedToken","formData","params","JSON","stringify","bookingData","fetch","URLSearchParams","then","_data","alert","useEffect","negotiate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1dcf2bb2.chunk.js","sourcesContent":["import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport './logoCard.css';\n\n// LOGO CARD COMPONENT\n// shows the hotel title\n\nfunction LogoCard({ title }) {\n  return (\n    <Card className=\"logoCard\">\n      <CardContent className=\"cardContent\">\n        <Typography\n          gutterBottom\n          variant=\"h1\"\n          component=\"h1\"\n        >\n          {title}\n        </Typography>\n        <div className=\"logo-wrapper\">\n          <div className=\"logo-emblem\"></div>\n          <div className=\"logo-emblem\"></div>\n          <div className=\"logo-emblem\"></div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default LogoCard;\n\n","import React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport './Card.css';\n\n// Token Card COMPONENT\n// Displays a single tickets data\n\nfunction TokenCard({ tokenInstance, applyDiscount, discount, selectedPendingTokenInstance }) {\n\n  const isSelectedToken = (\n    discount.tokenInstance && \n    discount.tokenInstance.ticketId === tokenInstance.ticketId &&\n    discount.tokenInstance.ticketClass === tokenInstance.ticketClass &&\n    discount.tokenInstance.devconId === tokenInstance.devconId\n  );\n\n  let tokenClassNames = 'tokenCard';\n  if(isSelectedToken) tokenClassNames = 'tokenCard selected';\n\n  let tokenDetailsClassNames = 'ticketDetails';\n  if(selectedPendingTokenInstance) tokenDetailsClassNames += ' skeleton-card';\n\n  return (\n    <div onClick={e => applyDiscount(isSelectedToken ? null : tokenInstance)} className={tokenClassNames}>\n      <div className={tokenDetailsClassNames}>\n        <Typography className=\"ticketClass\" gutterBottom variant=\"h5\" component=\"h2\">\n          {tokenInstance.ticketClass.toString()}\n        </Typography>\n        <Typography className=\"ticketId\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {tokenInstance.ticketId.toString()}\n        </Typography>\n        <Typography className=\"devconId\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Devcon ID: {tokenInstance.devconId.toString()}\n        </Typography>\n      </div>\n      <img className=\"ticketImg\" src=\"ticket_example_image.svg\"></img>\n    </div>\n  );\n}\n\nexport default TokenCard;\n","\nimport React, { useReducer } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TokenCard from './../TokenCard';\nimport './BookingModal.css';\n\n// BOOKING MODAL COMPONENT\n// Booking form. Displays selected room data and option to select from tokens if found.\n\nexport default function BookingModal({ roomType, applyDiscount, discount, price, tokens, book, selectedPendingTokenInstance }) {\n\n  // Modal State (open boolean)\n  const [open, setOpen] = React.useState(false);\n\n  // Form state.\n  const [formInput, setFormInput] = useReducer((state, newState) => ({ ...state, ...newState }), { \n    reference: \"Beeple\",\n    cardNo: \"00000000000\", \n    cardSort: \"00-00-00\",\n    cardCsv: \"000\"\n  });\n\n  // Handle form input.\n  const handleInput = evt => {\n    const name = evt.target.name;\n    const newValue = evt.target.value;\n    setFormInput({ [name]: newValue });\n  };\n\n  // Simple validation check.\n  const formIsDisabled = () => {\n    return false;\n  }\n\n  // handle form submission.\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    book({ formInput, roomType });\n  };\n\n  // Open Modal\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  // Close Modal\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  // apply discount\n  const discountPerc = discount.value ? discount.value : 0;\n  const discountOfferValue = (discountPerc / 100) * price;\n  const viewPrice = price - discountOfferValue;\n\n  return (\n    <div>\n      <Button\n        size=\"small\"\n        color=\"primary\"\n        onClick={handleClickOpen}\n      >\n        Book\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\">\n        <div className='modalContainer'>\n          <DialogTitle\n            className=\"title\"\n            disableTypography={true}\n          >\n            {roomType} \n          </DialogTitle>\n          <DialogTitle\n            className=\"subTitle\"\n            disableTypography={true}\n          >\n            {viewPrice} COP per night. { discount.value ? `(${discount.value}% discount)` : \"\"}\n        </DialogTitle>\n          <DialogContent>\n            <form onSubmit={handleSubmit}>\n             <div style={{ border: \"1px solid darkcyan\", padding: \"7px 12px\", fontSize: \"14px\", display: \"flex\", justifyContent: \"space-between\" }}>\n                <div style={{ textAlign:\"left\" }}>check in 01/08/2021</div>\n                <div style={{ textAlign:\"left\" }}>check out 15/08/2021</div>\n             </div>\n             <div style={{ borderLeft: \"1px solid darkcyan\", borderRight: \"1px solid darkcyan\", borderBottom: \"1px solid darkcyan\", padding: \"7px 12px\", fontSize: \"14px\", textAlign:\"left\" }}>\n                <div>Total { viewPrice * 14 } COP</div>\n             </div>\n              <div>\n                {tokens.length > 0 && <p className=\"smallCopy\">Select a ticket to apply discount:</p>\n                }\n              </div>\n              <div className=\"ticketWrapper\">\n              {tokens &&\n                tokens\n                  .map((token, index) => (\n                    <div key={index}>\n                      <TokenCard\n                        applyDiscount={applyDiscount}\n                        tokenInstance={token}\n                        discount={discount}\n                        selectedPendingTokenInstance={selectedPendingTokenInstance}\n                      />\n                    </div>\n                  ))\n              }\n              </div>\n              <TextField\n                id=\"booking-name\"\n                label=\"Reference name\"\n                placeholder=\"Beeple\"\n                value=\"Beeple\"\n                helperText=\"(a check-in reference name for your booking)\"\n                fullWidth\n                name=\"reference\"\n                margin=\"normal\"\n                onChange={handleInput}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <TextField\n                id=\"card-no\"\n                label=\"Card Number\"\n                fullWidth\n                placeholder=\"00000000000\"\n                value=\"00000000000\"\n                name=\"cardNo\"\n                margin=\"normal\"\n                onChange={handleInput}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <TextField\n                id=\"card-sort\"\n                label=\"Card Sort Number\"\n                fullWidth\n                placeholder=\"00-00-00\"\n                value=\"00-00-00\"\n                name=\"cardSort\"\n                margin=\"normal\"\n                onChange={handleInput}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <TextField\n                id=\"card-csv\"\n                label=\"CSV\"\n                fullWidth\n                value=\"000\"\n                placeholder=\"000\"\n                name=\"cardCsv\"\n                margin=\"normal\"\n                onChange={handleInput}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              <div style={{ display: \"flex\", alignItems: \"flex-end\", justifyContent: \"flex-end\", marginTop: \"12px\" }}>\n                <div style={{ color: \"grey\", fontSize: \"12px\", marginRight: \"5px\" }}>cards accepted</div>\n                <img style={{ width: \"100px\", height: \"24px\" }} src=\"./cards-accepted-demo.png\"></img>\n              </div>\n            </form>\n          </DialogContent>\n          <div className=\"booking\">\n          <DialogActions>\n            <Button\n              onClick={handleClose}\n              color=\"primary\"\n            >\n              Cancel\n          </Button>\n          <Button\n              onClick={handleSubmit}\n              color=\"primary\"\n              disabled={formIsDisabled()}\n            >\n              Pay Now\n          </Button>\n          </DialogActions>\n        </div>\n        </div>\n      </Dialog>\n    </div>\n  );\n}\n\n\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport BookingModal from './../BookingModal';\nimport Typography from '@material-ui/core/Typography';\nimport './RoomCard.css';\n\n// ROOM CARD COMPONENT\n// Shows hotel room item; image, price and option to book on main page.\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    margin: \"20px\"\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport default function RoomCard({ room, applyDiscount, discount, tokens, book, selectedPendingTokenInstance }) {\n  const classes = useStyles();\n  const { type, price, image, frequency } = room;\n  return (\n    <Card className=\"roomCard\">\n      <div>\n        <CardMedia\n          className={classes.media}\n          image={image}\n          title=\"token\"\n        />\n        <CardContent>\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n            component=\"h2\"\n          >\n            {type}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            component=\"p\"\n          >\n            From {price} COP / {frequency}\n          </Typography>\n        </CardContent>\n      </div>\n      <CardActions>\n        <BookingModal\n          book={book}\n          applyDiscount={applyDiscount}\n          tokens={tokens}\n          roomType={type}\n          discount={discount}\n          price={price} \n          selectedPendingTokenInstance={selectedPendingTokenInstance}\n          />\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport './TokenNotificationCard.css';\n\n// TOKEN NOTIFICATION CARD COMPONENT\n// - shows ticket number\n// - manages the user selection if they will accept Devcon to connect with this page\n\n// When Access is granted this view will show\nfunction TokenView({tokensNumber}) {\n    return (\n      <Card className=\"tokenNotificationCard\">\n        <CardContent>\n          <Typography\n            gutterBottom\n            variant=\"h1\"\n            component=\"h1\"\n          >\n            {tokensNumber} Devcon Tickets\n          </Typography>\n          <Typography\n            gutterBottom\n            variant=\"body1\"\n            component=\"p\"\n          >\n            booking discounts available\n          </Typography>\n        </CardContent>\n        <div className=\"cardBottomLip\"></div>\n      </Card>\n  );\n};\n\nfunction TokenNotificationCard({ tokensNumber }) {\n  return (\n    <Zoom in={true} style={{ transitionDelay: true ? '500ms' : '0ms' }}>\n      <TokenView tokensNumber={tokensNumber}></TokenView> \n    </Zoom>\n  );\n}\n\nexport default TokenNotificationCard;\n\n","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\n\n// DATE PICKER COMPONENT\n// wraps the Date picker material ui component\n\nexport default function DatePicker({ label, handleInput, date }) {\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container justifyContent=\"space-around\">\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"dd/MM/yyyy\"\n          margin=\"normal\"\n          className=\"date-picker-inline\"\n          label={label}\n          disabled={true}\n          value={date}\n          onChange={e => handleInput(e, label)}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React, { useState } from \"react\";\nimport DatePicker from './../DatePicker';\n\n// BOOKING DATE COMPONENT\n// Mock Date Picker for demo purposes only\n\nconst BookingDate = () => {\n\n  var today = new Date();\n  var tomorrow = new Date();\n  tomorrow.setDate(tomorrow.getDate() + 1);\n\n  // Form state.\n  const [formInput, setFormInput] = useState({\n    from: today,\n    to: tomorrow\n  });\n\n  // Handle date change input\n  const handleInput = (newValue, label) => {\n    setFormInput({ [label]: newValue });\n  };\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\n      <div style={{ display: 'flex', justifyContent: 'center', width: '80%' }}>\n        <div style={{ margin: '10px' }}>\n          <DatePicker\n            name={'from'}\n            label={'check in'}\n            handleInput={handleInput}\n            date={\"08/01/2021\"}\n          />\n        </div>\n        <div style={{ margin: '10px' }}>\n          <DatePicker\n            name={'to'}\n            label={'check out'}\n            handleInput={handleInput}\n            date={\"08/15/2021\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BookingDate;","import React, { useState, useEffect } from 'react';\nimport LogoCard from './LogoCard';\nimport RoomCard from './RoomCard';\nimport TokenNotificationCard from './TokenNotificationCard';\nimport Typography from '@material-ui/core/Typography';\nimport BookingDate from './BookingDate';\nimport { Client } from '@tokenscript/token-negotiator';\nimport './App.css';\n\n// mock data e.g. server side hotel room price database\nconst mockRoomData = [{ \"type\": \"Deluxe Room\", \"price\": 200000, \"frequency\": \"per night\", \"image\": \"./hotel_3.jpg\" }, { \"type\": \"King Suite\", \"price\": 320000, \"frequency\": \"per night\", \"image\": \"./hotel_2.png\" }, { \"type\": \"Superior Deluxe Suite\", \"price\": 250030, \"frequency\": \"per night\", \"image\": \"./hotel_1.jpg\" }]\n\n// mock discount of 10% applied to any ticket selected. In a real world scenario, this maybe different per ticket type and retrieved from a backend service.\nconst mockRoomDiscountData = 10;\n\nconst tokenIssuers = ['devcon-remote'];\n\nwindow.negotiator = new Client({\n  type: 'passive',\n  issuers: tokenIssuers,\n  options: {}\n});\n\nfunction App() {\n\n  // devcont tickets (react state of tokens)\n  let [tokens, setTokens] = useState([]);\n\n  let [tokenProofData, setTokenProofData] = useState({ issuer: null, proof: null });\n\n  // react state of token specical offer\n  let [freeShuttle, setFreeShuttle] = useState(false);\n\n  // react state of hotel room data\n  let [roomTypesData, setRoomTypesData] = useState([]);\n\n  // selected token instance to apply discount, with the discount value on hotel booking.\n  let [discount, setDiscount] = useState({ value: undefined, tokenInstance: null });\n  \n  let [selectedPendingTokenInstance, setSelectedPendingTokenInstance] = useState();\n\n  window.negotiator.on('tokens', (issuerTokens) => {\n    let tokens = [];\n    tokenIssuers.map((issuer) => {\n      tokens.push(...issuerTokens[issuer].tokens);\n    });\n    if (tokens.length > 0) {\n      setTokens(tokens);\n      setFreeShuttle(true);\n    }\n  });\n\n  window.negotiator.on(\"token-proof\", (tokenProof) => {\n\n    setTimeout(() => {\n\n      setSelectedPendingTokenInstance(null);\n      setTokenProofData(tokenProof);\n      setDiscount({ value: getApplicableDiscount(), tokenInstance: selectedPendingTokenInstance });\n\n    }, 0);\n\n  });\n\n  // async example of initial hotel data loaded from source\n  const getRoomTypesData = () => {\n    return mockRoomData;\n  }\n\n  // example to return a discount\n  const getApplicableDiscount = () => {\n    return mockRoomDiscountData;\n  }\n\n  // When a ticket is present and user applies it, the discount will be shown\n  const applyDiscount = async (ticket) => {\n\n    // toggle room discount offer on/off\n    if (!ticket || ticket === null) {\n\n      // clear discount\n      setDiscount({ value: undefined, tokenInstance: undefined });\n      setTokenProofData({ issuer: null, proof: null });\n\n    } else {\n\n      // ticket selected, but owner is not yet authenticated.\n      setSelectedPendingTokenInstance(ticket);\n\n      // authenticate ownership of token\n      window.negotiator.authenticate({\n        issuer: 'devcon-remote',\n        unsignedToken: ticket\n      });\n    \n    }\n\n  }\n\n  // This is the example at which the hotel would begin a hotel room booking transaction.\n  const book = async (formData) => {\n    const checkoutEndPoint = \"https://raw.githubusercontent.com/TokenScript/token-negotiator-examples/main/mock-backend-payment-process-request.json?\";\n    const params = {\n      tokenProof: JSON.stringify(tokenProofData),\n      bookingData: { formData }\n    }\n    fetch(checkoutEndPoint + new URLSearchParams(params)).then(_data => {\n      if(tokenProofData && tokenProofData.proof) {\n        alert('Transaction Complete with token discount, we look forward to your stay with us!');\n      } else {\n        alert('Transaction Complete with no discount, we look forward to your stay with us!');\n      }\n    });\n  }\n\n  useEffect(() => {\n    // assign room data to react local state\n    setRoomTypesData(getRoomTypesData());\n    // \n    window.negotiator.negotiate();\n  }, []);\n\n  return (\n    <div>\n      <div className=\"header\">\n        <LogoCard title={\"Hotel Bogota\"} />\n        <TokenNotificationCard tokensNumber={tokens.length} />\n      </div>\n      <BookingDate />\n      <div className=\"roomCardsContainer\">\n        {roomTypesData.map((room, index) => {\n          return <RoomCard\n            key={index}\n            room={room}\n            applyDiscount={applyDiscount}\n            discount={discount}\n            tokens={tokens}\n            book={book}\n            selectedPendingTokenInstance={selectedPendingTokenInstance}\n          />\n        })}\n      </div>\n      {\n        freeShuttle &&\n        <div>\n          <Typography\n            style={{ padding: '20px' }}\n            className=\"applyDiscountCopyContainer\"\n            gutterBottom\n            variant=\"body2\"\n            component=\"p\">\n            Free shuttle service available to you as a Devcon Ticket holder! Enjoy the event.\n          </Typography>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}