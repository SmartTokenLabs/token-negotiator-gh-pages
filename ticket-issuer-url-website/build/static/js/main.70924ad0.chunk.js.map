{"version":3,"sources":["components/Token/index.js","App.js","reportWebVitals.js","index.js"],"names":["Token","tokenInstance","ticketClass","ticketId","devconId","className","Typography","variant","component","toString","color","src","mockTicketData","ticket","secret","id","tokenIssuers","App","useState","tokens","setTokens","negotiator","Client","type","issuers","options","on","issuerTokens","map","issuer","push","useEffect","negotiate","openTicketInIframe","a","event","preventDefault","magicLink","addTokenThroughTab","setTimeout","href","length","index","mockTicket","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"usBAyBeA,MArBf,YAAmC,IAAlBC,EAAiB,EAAjBA,cAEPC,EAAoCD,EAApCC,YAAaC,EAAuBF,EAAvBE,SAAUC,EAAaH,EAAbG,SAC/B,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,cAACC,EAAA,EAAD,CAAYD,UAAU,cAAcE,QAAQ,KAAKC,UAAU,KAA3D,SACGN,EAAYO,aAEf,cAACH,EAAA,EAAD,CAAYD,UAAU,WAAWE,QAAQ,QAAQG,MAAM,gBAAgBF,UAAU,IAAjF,SACGL,GAAYA,EAASM,aAExB,eAACH,EAAA,EAAD,CAAYD,UAAU,WAAWE,QAAQ,QAAQG,MAAM,gBAAgBF,UAAU,IAAjF,wBACcJ,GAAYA,EAASK,iBAGrC,qBAAKJ,UAAU,YAAYM,IAAI,iCCf/BC,G,OAAiB,CACrB,CACEC,OAAQ,+MACRC,OAAO,cACPC,GAAG,eAEL,CACEF,OAAQ,mNACRC,OAAO,cACPC,GAAG,eAEL,CACEF,OAAQ,2MACRC,OAAO,cACPC,GAAG,eAEL,CACEF,OAAQ,2MACRC,OAAO,cACPC,GAAG,iBAIDC,EAAe,CAAC,iBAwGPC,MAtGf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAKC,EAAL,KAAaC,EAAb,KAEIC,EAAa,IAAIC,IAAO,CAC1BC,KAAM,UACNC,QAASR,EACTS,QAAS,KAGXJ,EAAWK,GAAG,UAAU,SAACC,GAEvB,IAAIR,EAAS,GAEbH,EAAaY,KAAI,SAACC,GAEhBV,EAAOW,KAAP,MAAAX,EAAM,YAASQ,EAAaE,GAAQV,YAItCC,EAAUD,MAIZY,qBAAU,WAERV,EAAWW,cAEV,IAEH,IAAMC,EAAkB,uCAAG,qCAAAC,EAAA,sDAAQC,EAAR,EAAQA,MAAOtB,EAAf,EAAeA,OAAQC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,GAExDoB,EAAMC,iBAMAC,EARmB,qIAQuHxB,EARvH,mBAQwIC,EARxI,eAQqJC,GAE9KM,EAAWiB,mBAAmBD,GAI9BE,YAAW,WAETlB,EAAWW,cAEV,KAlBsB,2CAAH,sDAsBxB,OACE,iCACE,mBAAGQ,KAAK,IAAR,SAAY,qBAAKnC,UAAU,OAAOM,IAAI,mBACtC,qBAAKN,UAAU,aAAf,SACE,+DAEF,qBAAKA,UAAU,aAAf,SACE,qBAAKA,UAAU,gBAAgBM,IAAI,0BAErC,qBAAKN,UAAU,aAAf,SACE,2KAEF,qBAAKA,UAAU,aAAf,SACE,gDAEF,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,gBAAf,UAEIc,GAAUA,EAAOsB,OAAS,GAAKtB,EAAOS,KAAI,SAAC3B,EAAeyC,GACxD,OAAO,cAAC,EAAD,CAAmBzC,cAAeA,GAAtByC,OAIpBvB,EAAOsB,QAAU,8BAChB,2DAKR,mBAAGpC,UAAU,aAAb,8BACA,qBAAKA,UAAU,aAAf,SACM,qBAAKA,UAAU,gBAAf,SAEIO,EAAegB,KAAI,SAACe,EAAYD,GAC9B,OACE,wBAAoBrC,UAAU,aAAauC,QAAS,SAAAT,GAAK,OAAIF,EAAmB,CAC9EE,QACAtB,OAAQ8B,EAAW9B,OACnBC,OAAQ6B,EAAW7B,OACnBC,GAAI4B,EAAW5B,MAJjB,0BAAa2B,cCzGlBG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.70924ad0.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport './Token.css';\n\nfunction Token({ tokenInstance }) {\n\n  const { ticketClass, ticketId, devconId } = tokenInstance;\n  return (\n    <div className=\"ticketContainer\">\n      <div className=\"ticketDetails\">\n        <Typography className=\"ticketClass\" variant=\"h5\" component=\"h2\">\n          {ticketClass.toString()}\n        </Typography>\n        <Typography className=\"ticketId\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {ticketId && ticketId.toString()}\n        </Typography>\n        <Typography className=\"devconId\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Devcon ID: {devconId && devconId.toString()}\n        </Typography>\n      </div>\n      <img className=\"ticketImg\" src=\"ticket_example_image.svg\"></img>\n    </div>\n  );\n}\n\nexport default Token;\n","import React, { useState, useEffect } from 'react';\nimport { Client } from '@tokenscript/token-negotiator';\nimport Token from './components/Token';\nimport './App.css';\n\nconst mockTicketData = [\n  {\n    ticket: \"MIGWMA0MATYCBWE3ap3-AgEABEEEKJZVxMEXbkSZZBWnNUTX_5ieu8GUqf0bx_a0tBPF6QYskABaMJBYhDOXsmQt3csk_TfMZ2wdmfRkK7ePCOI2kgNCAOOZKRpcE6tLBuPbfE_SmwPk2wNjbj5vpa6kkD7eqQXvBOCa0WNo8dEHKvipeUGZZEWWjJKxooB44dEYdQO70Vgc\",\n    secret:\"45845870684\",\n    id:\"mah@mah.com\"\n  },\n  {\n    ticket: \"MIGXMA4MAjExAgVhN2qd_gIBAARBBCiWVcTBF25EmWQVpzVE1_-YnrvBlKn9G8f2tLQTxekGLJAAWjCQWIQzl7JkLd3LJP03zGdsHZn0ZCu3jwjiNpIDQgBbJBY1Ctlp_czUwB85yF1e5kpZ-lQ_-UZ7jaCYSFoEx028Jit1HIDLCJezKdsNn9c9IO7-HC-_r2ZLaYQ9GGrbHA==\",\n    secret:\"45845870684\",\n    id:\"mah@mah.com\"\n  },\n  {\n    ticket: \"MIGTMAoMATYCAgDeAgEABEEEKJZVxMEXbkSZZBWnNUTX_5ieu8GUqf0bx_a0tBPF6QYskABaMJBYhDOXsmQt3csk_TfMZ2wdmfRkK7ePCOI2kgNCAEZYXbNmWXDsAqIc5uf7SirR-dLCMLdEVN5teFrV93VbcKE_DED8c6jtFQ5LH2SRXwPEtXZqWfEh1c2OHTEYqfwb\",\n    secret:\"45845870684\",\n    id:\"mah@mah.com\"\n  },\n  {\n    ticket: \"MIGSMAkMATECAQECAQAEQQQollXEwRduRJlkFac1RNf_mJ67wZSp_RvH9rS0E8XpBiyQAFowkFiEM5eyZC3dyyT9N8xnbB2Z9GQrt48I4jaSA0IAOf4d0N9shWfPIgRXZPdBRhlRyIARDT0tJwNWYwy2ILVKnIy-qPzFsgdI6sZHm1OY6UsJKuDlp0A7EMC8vS5YhRs=\",\n    secret:\"45845870684\",\n    id:\"mah@mah.com\"\n  },\n];\n\nconst tokenIssuers = ['devcon-remote'];\n\nfunction App() {\n\n  let [tokens, setTokens] = useState([]);\n\n  let negotiator = new Client({\n    type: 'passive',\n    issuers: tokenIssuers,\n    options: {}\n  });\n\n  negotiator.on('tokens', (issuerTokens) => {\n\n    let tokens = [];\n    \n    tokenIssuers.map((issuer) => {\n\n      tokens.push(...issuerTokens[issuer].tokens);\n\n    });\n\n    setTokens(tokens);\n    \n  });\n  \n  useEffect(() => {\n\n    negotiator.negotiate();\n\n  }, []);\n\n  const openTicketInIframe = async ({event, ticket, secret, id}) => {\n    \n    event.preventDefault();\n\n    // localhost:3002\n    // const magicLink = `http://localhost:3002/?ticket=${ticket}&secret=${secret}&id=${id}`;\n    \n    // Github example\n    const magicLink = `https://tokenscript.github.io/token-negotiator-examples/github-pages-use-only/token-outlet-website/build/index.html?ticket=${ticket}&secret=${secret}&id=${id}`;\n                       \n    negotiator.addTokenThroughTab(magicLink);\n\n    // negotiator.addTokenThroughIframe(magicLink);\n\n    setTimeout(() => {\n\n      negotiator.negotiate();\n\n    }, 3000);\n\n  }\n\n  return (\n    <main>\n      <a href=\"/\"><img className=\"logo\" src=\"./devcon.svg\"></img></a>\n      <div className=\"flexCenter\">\n        <p>[DEMO Ticket Issuer Website]</p>\n      </div>\n      <div className=\"flexCenter\">\n        <img className=\"devcon_bogota\" src=\"./devcon_bogota.svg\"></img>\n      </div>\n      <div className=\"flexCenter\">\n        <p>A Devcon ticket provides access to the event and special offers between the dates X-XX for hotel bookings, travel, restaurants and more.</p>\n      </div>\n      <div className=\"flexCenter\">\n        <p>Your tickets:</p>\n      </div>\n      <div className=\"flexCenter\">\n        <div className=\"tokensWrapper\">\n          {\n            tokens && tokens.length > 0 && tokens.map((tokenInstance, index) => {\n              return <Token key={index} tokenInstance={tokenInstance} />\n            })\n          }\n          {\n            !tokens.length && <div>\n              <b>- no ticket found -</b>\n            </div>\n          }\n        </div>\n      </div>\n      <p className=\"flexCenter\">Generate ticket:</p>\n      <div className=\"flexCenter\">\n            <div className=\"ticketWrapper\">\n              {\n                mockTicketData.map((mockTicket, index) => {\n                  return (\n                    <button key={index} className=\"makeTicket\" onClick={event => openTicketInIframe({ \n                      event,\n                      ticket: mockTicket.ticket,\n                      secret: mockTicket.secret,\n                      id: mockTicket.id\n                    })}>Create Ticket</button> \n                  )\n                })\n              }\n            </div>\n        </div>\n    </main>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}